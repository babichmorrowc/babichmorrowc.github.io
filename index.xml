<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cecina Babich Morrow on Cecina Babich Morrow</title>
    <link>/</link>
    <description>Recent content in Cecina Babich Morrow on Cecina Babich Morrow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hacking Meteorites: Using DBSCAN for mineral analysis</title>
      <link>/post/2019-02-20-meteoritecluster/</link>
      <pubDate>Wed, 20 Feb 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/2019-02-20-meteoritecluster/</guid>
      <description>


&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/obj2_cluster_pred.png&#34; /&gt;
&lt;/figure&gt;
&lt;p&gt;Earlier this month I participated in the American Museum of Natural History’s annual hackathon (see my last &lt;a href=&#34;https://babichmorrowc.github.io/post/2019-02-14-hackathon/&#34;&gt;post&lt;/a&gt; for details about the event overall). During the hackathon, I worked with Katy Abbott, another Helen Fellow at the museum with me, to use a machine learning algorithm called DBSCAN to tackle our challenge.&lt;/p&gt;
&lt;div id=&#34;challenge-accepted&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Challenge accepted&lt;/h2&gt;
&lt;p&gt;Our team, consisting of Peter Kang, Jackson Lee, Jeremy Neiman, John Underwood, Katy Abbott, Meret Götschel, and myself, chose to work on the &lt;a href=&#34;https://github.com/amnh/HackTheSolarSystem/wiki/Meteorite-Mineral-Mapping&#34;&gt;Meteorite Mineral Mapping challenge&lt;/a&gt;. For this challenge, our museum stakeholders, Marina Gemma and Sam Alpert, wanted a way to identify the mineral composition of meteorites.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pixels-to-percents&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pixels to percents&lt;/h2&gt;
&lt;p&gt;The scientists scan meteorites with an electron microprobe, a device that provides the intensity of x-rays emitted from certain elements. The electron microprobe results in images with grayscale intensities corresponding to these x-ray intensities on a pixel-by-pixel basis.&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/meteorite_pixel_intensity.png&#34; /&gt;
&lt;figcaption&gt;
Images of a meteorite produced by the electron microprobe showing pixel intensities for each of 10 elements - brighter grayscale values indicate greater amounts of that element in a pixel.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Our first step was to convert these pixel intensities to the percent weight of each element in the mineral at that pixel. To do that, we referred to a set of standard images taken of minerals with a known proportion of each element. For example, the image below shows the pixel intensities of iron in 8 minerals: you can see that the pixels are brightest in Fe, or pure iron, and lower in iron oxide (&lt;span class=&#34;math inline&#34;&gt;\(\text{Fe}_3\text{O}_4\)&lt;/span&gt;) and troilite, or iron sulfide (FeS).&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/iron_standard.png&#34; /&gt;
&lt;figcaption&gt;
Standard scan of the intensity of iron in each of 8 known minerals.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;We can relate the intensity of the iron pixels in the Fe mineral, for example, to the percent weight in that mineral (100%, since iron is the only element in Fe). There is a linear relationship between pixel intensity and percent weight, so we used linear regression to find the slope of this relationship.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# import libraries
from sklearn.cluster import DBSCAN as dbscan
import pandas as pd
import numpy as np
from sklearn import metrics
import matplotlib.pyplot as plt
import matplotlib.colors
from sklearn.decomposition import PCA
from pathlib import Path
from skimage.io import imread, imshow
import numpy.ma as ma
from collections import Counter&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Note: I was able to add the above Python chunk in R by following &lt;a href=&#34;&#34;&gt;these instructions&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;further-reading&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Further Reading&lt;/h2&gt;
&lt;p&gt;Jeremy Neiman, one of my team members, wrote an excellent &lt;a href=&#34;https://towardsdatascience.com/machine-learning-meteorites-fcd8f6859ed7&#34;&gt;post&lt;/a&gt; describing the challenge in further detail, so check that out for more information.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python in RMarkdown</title>
      <link>/post/2019-02-20-pythonrmd/</link>
      <pubDate>Wed, 20 Feb 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/2019-02-20-pythonrmd/</guid>
      <description>


&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/reticulate.png&#34; /&gt;
&lt;figcaption&gt;
The &lt;code&gt;reticulate&lt;/code&gt; package logo. &lt;/figcatption&gt;
&lt;/figure&gt;
&lt;div id=&#34;using-python-in-rmarkdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Using Python in RMarkdown&lt;/h2&gt;
&lt;p&gt;In order to write blog posts using Python code, I wanted to figure out a way to include Python code chunks in RMarkdowns. When you insert a code chunk in RMarkdown, you have the option of specifying the language of that chunk: the default is R, but you can also insert a Bash, SQL, Python, etc. code chunk.&lt;/p&gt;
&lt;p&gt;When I attempted to insert a Python code chunk and import libraries, however, I kept getting the error:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Error in py_run_string_impl(code, local, convert) :&lt;/code&gt; &lt;code&gt;ImportError: No module named sklearn.cluster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;From running Python in Atom, I knew I had the &lt;code&gt;sklearn.cluster&lt;/code&gt; module installed, so the problem must be in the connection between R and Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reticulate&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;reticulate&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;reticulate&lt;/code&gt; package in R (website &lt;a href=&#34;https://rstudio.github.io/reticulate/index.html&#34;&gt;here&lt;/a&gt; allows R to interact with Python. I installed the package from RStudio.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;reticulate&amp;quot;)
library(reticulate)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;changing-python-versions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Changing Python versions&lt;/h2&gt;
&lt;p&gt;Installing &lt;code&gt;reticulate&lt;/code&gt; still didn’t allow me to knit the RMarkdown with a Python code chunk, however. I followed the instructions in &lt;a href=&#34;https://rstudio-pubs-static.s3.amazonaws.com/397064_bd288708515c4b71a6e78dfe91b8bb99.html&#34;&gt;this post&lt;/a&gt; by Pablo Franco to check the Python version that &lt;code&gt;reticulate&lt;/code&gt; was using:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;py_discover_config()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ended up with the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python:         /usr/bin/python
libpython:      /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/config/libpython2.7.dylib
pythonhome:     /System/Library/Frameworks/Python.framework/Versions/2.7:/System/Library/Frameworks/Python.framework/Versions/2.7
version:        2.7.10 (default, Aug 17 2018, 19:45:58)  [GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.0.42)]
numpy:          /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy
numpy_version:  1.8.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I wanted to be running Python version 3.6, which was the version I had installed using Anaconda, so I needed to change the path.&lt;/p&gt;
&lt;div id=&#34;set-up-chunk&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Set-up chunk&lt;/h3&gt;
&lt;p&gt;I discovered that you can set the path to a different installation of Python by modifying the setup chunk at the start of the RMarkdown. According to the &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/language-engines.html&#34;&gt;&lt;code&gt;bookdown&lt;/code&gt; website&lt;/a&gt;, the default used is Python 2.&lt;/p&gt;
&lt;p&gt;My default version of this set-up chunk looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can set the chunk option &lt;code&gt;engine.path&lt;/code&gt; to specify the path to the engine interpreter and change it from the default Python 2.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;finding-python-path&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Finding Python path&lt;/h3&gt;
&lt;p&gt;I now needed to find the actual path to Python that I wanted to use. I did this by opening up Python separately from RStudio (I used Atom for this) and running the following (I got the code for this from &lt;a href=&#34;https://www.dummies.com/programming/python/how-to-find-path-information-in-python/&#34;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import sys
for p in sys.path:
    print(p)
## /anaconda3/bin
## /anaconda3/lib/python36.zip
## /anaconda3/lib/python3.6
## /anaconda3/lib/python3.6/lib-dynload
## /anaconda3/lib/python3.6/site-packages
## /anaconda3/lib/python3.6/site-packages/aeosa
## /Library/Frameworks/R.framework/Versions/3.5/Resources/library/reticulate/python&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From this information, I could tell I wanted to use the path &lt;code&gt;/anaconda3/lib/python3.6&lt;/code&gt;, rather than &lt;code&gt;/usr/bin/python&lt;/code&gt;, which is what RMarkdown had originally been using. I modified by set-up chunk to look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE, engine.path = list(python = &amp;#39;/anaconda3/bin/python3.6&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;other-options&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Other options&lt;/h2&gt;
&lt;p&gt;This solution enabled me to knit RMarkdowns with Python code chunks! It changes the engine interpreter globally, which you could do for multiple engines simultaneously, like Python and Ruby, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;knitr::opts_chunk$set(engine.path = list(
  python = &amp;#39;/anaconda3/bin/python3.6&amp;#39;,
  ruby = &amp;#39;/usr/local/bin/ruby&amp;#39;
))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can specify the engine interpreter locally in each code chunk by starting the chunk with &lt;code&gt;{python, engine.path = &#39;/anaconda3/bin/python3.6&lt;/code&gt;}, for example.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>#HackTheSolarSystem</title>
      <link>/post/2019-02-14-hackathon/</link>
      <pubDate>Thu, 14 Feb 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/2019-02-14-hackathon/</guid>
      <description>


&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:40%&#34; src=&#34;/img/hackthesolarsystem.png&#34; /&gt;
&lt;/figure&gt;
&lt;p&gt;Last weekend I had the opportunity to participate in my first ever hackathon: the #HackTheSolarSystem hackathon hosted by the American Museum of Natural History.&lt;/p&gt;
&lt;div id=&#34;what-is-a-hackathon-anyways&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is a hackathon, anyways?&lt;/h2&gt;
&lt;p&gt;This is a question I got asked countless times this last week as I informed my friends and family that I would be at work &lt;strong&gt;all&lt;/strong&gt; weekend (yes, including Friday night, yes, including Saturday night, no, I will not be able to socialize at all). And, in fairness, this is a question I wouldn’t have had an answer to prior to this job. A hackathon is an event where participants come together to use technology to address a challenge. Usually, the event takes place over a few days, where hackers form teams and collaborate on their projects, before presenting their solutions.&lt;/p&gt;
&lt;p&gt;When I learned about this concept, I was baffled by the idea that it would be possible to come up with any kind of viable solution to a problem in only 24 hours. Coming from an academic background, I’m used to months of reading papers to get oriented to a problem before I can produce any kind of meaningful code. This event forced us to dive right in, looking at the problem from a computer science standpoint, rather than striving to get the full scientific background on the problem. I was amazed by the ability of all the teams at the event to create meaningful solutions to scientific problems they had not necessarily studied before.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-ammh-hackathon&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The AMMH Hackathon&lt;/h2&gt;
&lt;p&gt;For the past five years, the American Museum of Natural History has hosted a hackathon. #HackTheSolarSystem is the first and only hackathon I have participated in thus far, so I can’t compare it to other events, but my understanding is that the museum seeks to put on a slightly different type of event than other hackathons: AMNH wants to give technologists and scientists the opportunity to work together to create solutions to real research problems. For #HackTheSolarSystem, museum scientists from the Department of Earth and Planetary Science put forth a series of challenges they face in their research that they thought could be solved through technology. These challenges ranged from tracking dust particles through aerogel to visualizing the Sun (a full list of challenges is available &lt;a href=&#34;https://github.com/amnh/HackTheSolarSystem/wiki/Challenges&#34;&gt;here&lt;/a&gt;). In addition to the scientific challenges, there were also educational challenges for both high school students and educators.&lt;/p&gt;
&lt;p&gt;On Friday night, the museum “stakeholders”, i.e. the scientists posing the challenges, presented their challenges and led participants on tours of various areas of the museum, like the Hall of Meteorites and the Earth and Planetary Sciences department. Then, from Saturday at 2:00 pm to Sunday at 1:00 pm, us hackers stayed at the museum to develop solutions to our chosen challenges. Most hackers worked on teams formed at the event, although some corporate teams came into the hackathon with a team already formed.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-challenge&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;I chose to work on the meteorite mineral mapping challenge: our “stakeholders”, museum scientists Marina Gemma and Sam Alpert, wanted a way to identify mineral composition in images of meteorites. Each meteorite slice had been imaged, resulting in data consisting of pixel intensity for a handful of elements. We also had access to a series of standards with known mineral content so we could compare the pixel intensities in these known minerals with the pixel intensities in the unknown minerals.&lt;/p&gt;
&lt;p&gt;Our team (pictured below) used four different approaches to address this problem: linear classification via SVM, random forest classification, nearest neighbor classification, and cluster inference. You can check out more details on these solutions in the Readme of our GitHub repository: &lt;a href=&#34;https://github.com/HackTheSolarSystem/MineralMapping&#34; class=&#34;uri&#34;&gt;https://github.com/HackTheSolarSystem/MineralMapping&lt;/a&gt;. (And I will post a more detailed explanation of the clustering solution in a later post, which is the part of the code I focused on!)&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/hackathon_team.jpg&#34; /&gt;
&lt;figcaption&gt;
From left to right: Peter Kang, Jackson Lee, Jeremy Neiman, John Underwood, Katy Abbott, Cecina Babich Morrow, Meret Götschel
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Our solution ended up making us one of the four primary winning teams at the hackathon! We won the “LabCoat Knockout” award for creating a solution with the potential to change the nature of research. We plan to continue working with our museum stakeholders to fine-tune our code so that it can be used in their research in the future. To me, that is the most exciting part of this event - that a group of technologists from diverse backgrounds (none of which knew much about meteorites before this event!) could write code in 24 hours with the potential to solve a scientific problem with a concrete impact on research at the museum.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Grafting phylogenies</title>
      <link>/post/2019-01-09-grafting-trees/</link>
      <pubDate>Fri, 18 Jan 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/2019-01-09-grafting-trees/</guid>
      <description>


&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/bodymass_tetrapod_tree.png&#34; /&gt;
&lt;/figure&gt;
&lt;div id=&#34;inspiration-for-this-post&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Inspiration for this post&lt;/h1&gt;
&lt;p&gt;This post comes from the finishing touches I needed to put on a paper about &lt;a href=&#34;https://babichmorrowc.github.io/project/life_history/&#34;&gt;life history evolution&lt;/a&gt;. The paper compares life history traits across the four groups of tetrapods (amphibians, reptiles, mammals, and birds), so when I carried out the nitty gritty phylogenetic analyses, I used four separate phylogenies. When it came time to make a figure to visualize those analyses, however, I ended up with an unwieldy (and unpublishable) 16-panel figure (four phylogenies by four traits). One of my coauthors suggested using a tetrapod supertree to visualize the evolution of the traits across all four classes simultaneously.&lt;/p&gt;
&lt;div id=&#34;uyeda-et-al.-2017&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Uyeda et al. 2017&lt;/h2&gt;
&lt;p&gt;Uyeda et al. did something similar in their 2017 paper &lt;a href=&#34;https://www.journals.uchicago.edu/doi/10.1086/692326&#34;&gt;The evolution of energetic scaling across the vertebrate tree of life&lt;/a&gt;. They stitched together fish, amphibian, squamate, bird, and mammal phylogenies together to visualize metabolic rate across all vertebrates:&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/uyeda_figure.png&#34; /&gt;
&lt;figcaption&gt;
Figure 1 from Uyeda et al. 2017
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;At first, I was very hopeful that I would be able to download this supertree and prune it to the taxa in my analysis since the authors were using the same clade specific phylogenies that I was. The phylogeny is available on Data Dryad (&lt;a href=&#34;https://datadryad.org/resource/doi:10.5061/dryad.3c6d2&#34; class=&#34;uri&#34;&gt;https://datadryad.org/resource/doi:10.5061/dryad.3c6d2&lt;/a&gt;). Unfortunately, after downloading that phylogeny and pruning it to include species I used in my analysis, I ended up with approximately 15% of the species I analyzed in the resulting tree.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;into-the-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Into the code&lt;/h1&gt;
&lt;p&gt;Since my easy solution didn’t pan out and I couldn’t get enough information from the supplemental material for the paper to replicate their analyses, I looked on GitHub to try to find Uyeda’s code. Hooray for GitHub once again, because the repository for the paper can be found here: &lt;a href=&#34;https://github.com/uyedaj/bmr&#34; class=&#34;uri&#34;&gt;https://github.com/uyedaj/bmr&lt;/a&gt;. The &lt;a href=&#34;https://github.com/uyedaj/bmr/blob/master/R/ManuscriptNotebook.Rmd&#34;&gt;RMarkdown&lt;/a&gt; details the analyses for the paper, including the process for making the full tree.&lt;/p&gt;
&lt;p&gt;Start with loading the necessary packages.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(phytools)
## Loading required package: ape
## Loading required package: maps
library(geiger)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;the-original-phylogenies&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The original phylogenies&lt;/h2&gt;
&lt;p&gt;I was working with four separate phylogenies: amphibians, squamates, birds, and mammals. For amphibians, I used a congruified time-tree from the &lt;code&gt;PhyloOrchard&lt;/code&gt; package (O’Meara et al. 2013) that was constructed using the Alfaro et al. timetree of gnathostomes (Alfaro et al. 2009) as the reference and the Pyron and Wiens amphibian phylogeny as the target (Pyron and Wiens 2011).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(amphibiantree$tip.label)
## [1] 2871
plot(amphibiantree, type = &amp;quot;fan&amp;quot;, show.tip.label = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For squamates, I used the Zheng and Wiens time-calibrated phylogeny (Zheng and Wiens 2016).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(squamatetree$tip.label)
## [1] 378
plot(squamatetree, type = &amp;quot;fan&amp;quot;, show.tip.label = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For birds, I used the Jetz phylogeny (Jetz et al. 2012).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(birdtree$tip.label)
## [1] 9993
plot(birdtree, type = &amp;quot;fan&amp;quot;, show.tip.label = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For mammals, I used the supertree from Fritz et al. 2009.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(mammaltree$tip.label)
## [1] 5020
plot(mammaltree, type = &amp;quot;fan&amp;quot;, show.tip.label = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reading-in-trees&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reading in trees&lt;/h2&gt;
&lt;p&gt;The first step of the process is reading in the individual phylogenies you want to stitch together. This step is straightforward, with one exception: you cannot have species that are present in multiple of the individual trees. For example, my squamate phylogeny included &lt;em&gt;Gallus gallus&lt;/em&gt; (red junglefowl) and &lt;em&gt;Dromaius novaehollandia&lt;/em&gt; (emu). Since these species were also present in my bird phylogeny, I got the following error: &lt;code&gt;Found matching tips in &#39;subtree&#39; and &#39;phy&#39;&lt;/code&gt;. To solve this problem, I just removed these tips from the squamate tree:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;squamatetree &amp;lt;- drop.tip(phy = squamatetree, tip = c(&amp;quot;Gallus_gallus&amp;quot;, &amp;quot;Dromaius_novaehollandiae&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ended up with the following list of trees and corresponding tip labels:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tree_list &amp;lt;- list(amphib=amphibiantree, birds=birdtree, squam=squamatetree, mamm=mammaltree)
class(tree_list) &amp;lt;- &amp;quot;multiPhylo&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-a-tree-with-orders&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Make a tree with orders&lt;/h2&gt;
&lt;p&gt;In Uyeda et al. (2017), the authors were creating a phylogeny for all vertebrates, but for my analyses I was only examining tetrapods, so I didn’t have a fish phylogeny to include. The original code from Uyeda et al. to create a tree with the 5 vertebrate orders looks like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tip.labels &amp;lt;- c(&amp;quot;fish&amp;quot;, &amp;quot;amphib&amp;quot;, &amp;quot;squam&amp;quot;, &amp;quot;birds&amp;quot;, &amp;quot;mamm&amp;quot;)

## Make a tree with just orders:
edge &amp;lt;- matrix(c(9, 4,
  9, 3,
  8, 5,
  8, 9,
  7, 8,
  7, 2,
  6, 7,
  6, 1), byrow=TRUE, ncol=2)
## Dates from Timetree of life (timetree.org)
edge.length &amp;lt;- c(274.9, 274.9, 324.5, 324.5-274.9, 382.9-324.5, 382.9, 454.6-382.9 , 454.6)
Nnode &amp;lt;- 4
ordertree &amp;lt;- list(edge=edge, Nnode=Nnode, tip.label=tip.labels, edge.length=edge.length)
class(ordertree) &amp;lt;- &amp;#39;phylo&amp;#39;
plot(ordertree)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To visualize the results, we can add tip labels, node labels, and edge labels to the tree with the branch lengths:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(ordertree)
tiplabels()
nodelabels()
edgelabels(ordertree$edge.length, bg=&amp;quot;black&amp;quot;, col=&amp;quot;white&amp;quot;, font=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;getting-rid-of-fish&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Getting rid of fish&lt;/h3&gt;
&lt;p&gt;Since I didn’t have fish, I needed to make a few modifications. First, &lt;code&gt;tip.labels&lt;/code&gt; didn’t need “fish” in it anymore:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remove &amp;quot;fish&amp;quot; from tip.labels:
tip.labels &amp;lt;- c(&amp;quot;amphib&amp;quot;, &amp;quot;squam&amp;quot;, &amp;quot;birds&amp;quot;, &amp;quot;mamm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, for the trickier part - I needed to modify the edge matrix. The edge matrix contains the starting and ending nodes for each edge in a tree. As we can see from the plot above, numbering works in the following way: the tips are numbered starting at the top from 1 to the number of tips and the nodes are numbered starting at the root and moving towards the tips. To get rid of fish, I needed to delete one tip from the tree and one node (the original root node). I sketched out what I wanted the new order tree to look like, complete with numbered nodes and tips, and created the following edge matrix:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;edge &amp;lt;- matrix(c(7, 3,
  7, 2,
  6, 4,
  6, 7,
  5, 6,
  5, 1), byrow=TRUE, ncol=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since I was losing two edges from the phylogeny (the one going from the root to fish and the one from the root to the last common ancestor of tetrapods), I also needed to modify the edge lengths by removing 454.6-382.9 and 454.6:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;edge.length &amp;lt;- c(274.9, 274.9, 324.5, 324.5-274.9, 382.9-324.5, 382.9)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final modification I needed was to decrease &lt;code&gt;Nnode&lt;/code&gt; from 4 to 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Nnode &amp;lt;- 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ordertree &amp;lt;- list(edge=edge, Nnode=Nnode, tip.label=tip.labels, edge.length=edge.length)
class(ordertree) &amp;lt;- &amp;#39;phylo&amp;#39;
plot(ordertree)
edgelabels(ordertree$edge.length, bg=&amp;quot;black&amp;quot;, col=&amp;quot;white&amp;quot;, font=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;…I was ready to go with an order-level tree onto which I could graft my individual phylogenies!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;node-dates&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Node dates&lt;/h3&gt;
&lt;p&gt;…Not so fast. I ended up with an additional problem I needed to solve before grafting the trees together. I ran into the error &lt;code&gt;&#39;split_age&#39; is inconsistent with edge lengths in &#39;phy&#39;&lt;/code&gt;, which means that the earliest node in one of my individual phylogenies was older than the node age I gave in &lt;code&gt;edge.length&lt;/code&gt;. By &lt;a href=&#34;https://babichmorrowc.github.io/post/debug-r/&#34;&gt;using &lt;code&gt;debug&lt;/code&gt;&lt;/a&gt;, I was able to tell that the error occurred when I added the squamate tree. The oldest node in my squamate tree was 277.8 million years ago, but I had set the divergence time between birds and squamates at 274.9 mya, so R was having problems. The species causing the problem was the tuatara, which is the only surviving member of its order.&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/tuatara.png&#34; /&gt;
&lt;figcaption&gt;
The pesky (yet very cute) tuatara (&lt;a href=&#34;https://www.australiangeographic.com.au/blogs/creatura-blog/2017/12/the-tuatara/&#34; class=&#34;uri&#34;&gt;https://www.australiangeographic.com.au/blogs/creatura-blog/2017/12/the-tuatara/&lt;/a&gt;)
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I had a couple of choices: either delete the tuatara from the squamate phylogeny or increase the age of the last common ancestor of birds and squamates when I created the vector &lt;code&gt;edge.length&lt;/code&gt;. I chose to do the latter because why get rid of such a cool animal!&lt;/p&gt;
&lt;p&gt;I went to &lt;a href=&#34;http://timetree.org/&#34; class=&#34;uri&#34;&gt;http://timetree.org/&lt;/a&gt; to see if I could find a reasonable range of estimates for this node. According to the website, which allows you to search for the divergence time between any two taxa, the estimated divergence of birds and squamates occurred 280 mya.&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/timetree_birdsquamate.png&#34; /&gt;
&lt;figcaption&gt;
TimeTree results for divergence time of birds and squamates.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;So I ended up with the following code and order tree:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tip.labels &amp;lt;- c(&amp;quot;amphib&amp;quot;, &amp;quot;squam&amp;quot;, &amp;quot;birds&amp;quot;, &amp;quot;mamm&amp;quot;)
edge &amp;lt;- matrix(c(7, 3,
  7, 2,
  6, 4,
  6, 7,
  5, 6,
  5, 1), byrow=TRUE, ncol=2)
edge.length &amp;lt;- c(280, 280, 324.5, 324.5-274.9, 382.9-324.5, 382.9)
Nnode &amp;lt;- 3
ordertree &amp;lt;- list(edge=edge, Nnode=Nnode, tip.label=tip.labels, edge.length=edge.length)
class(ordertree) &amp;lt;- &amp;#39;phylo&amp;#39;
plot(ordertree)
edgelabels(ordertree$edge.length, bg=&amp;quot;black&amp;quot;, col=&amp;quot;white&amp;quot;, font=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tree_list &amp;lt;- list(amphib=amphibiantree, birds=birdtree, squam=squamatetree, mamm=mammaltree)
class(tree_list) &amp;lt;- &amp;quot;multiPhylo&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;grafting-the-trees&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Grafting the trees&lt;/h2&gt;
&lt;p&gt;The final step is grafting the individual trees onto the order tree in the proper place.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Add taxonomic information to tree
otax &amp;lt;- data.frame(&amp;quot;Class&amp;quot;= ordertree$tip.label, &amp;quot;Superclass&amp;quot;=c(rep(&amp;quot;Tetrapoda&amp;quot;,2)))
rownames(otax) &amp;lt;- ordertree$tip.label
classtree &amp;lt;- nodelabel.phylo(ordertree, otax, ncores=1)

res &amp;lt;- glomogram.phylo(classtree, tree_list)
plot(res, type = &amp;quot;fan&amp;quot;, show.tip.label = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-09-grafting-trees_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Voila - a tree with 18262 species of tetrapods!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;disclaimer&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Disclaimer&lt;/h1&gt;
&lt;p&gt;I’d like to finish this post with a disclaimer: I am NOT a phylogeneticist (yet?). The supertree created in this analysis incorporates several different phylogenies from literature and adapts code from another published article (all written by people with much more phylogenetic background than I!). However, the accuracy of the tree decreases as you move back in time - there is a great deal of uncertainty about node age for the deeper nodes in the tree. Even so, this process allows us to make some cool visualizations to compare major clades across vast stretches of evolutionary time - even if precise dates are incorrect, overall patterns are still informative!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Code&lt;/h1&gt;
&lt;p&gt;The entire script I used for this process can be found at &lt;a href=&#34;https://github.com/KerkhoffLab/bodymasspatterns/blob/master/tetrapod_phylogeny_code.R&#34; class=&#34;uri&#34;&gt;https://github.com/KerkhoffLab/bodymasspatterns/blob/master/tetrapod_phylogeny_code.R&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;literature-cited&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Literature Cited&lt;/h1&gt;
&lt;p&gt;Alfaro, M. E., F. Santini, C. Brock, H. Alamillo, A. Dornburg, D. L. Rabosky, G. Carnevale, and L. J. Harmon. 2009. Nine exceptional radiations plus high turnover explain species diversity in jawed vertebrates. PNAS 106:13410-13414.&lt;/p&gt;
&lt;p&gt;Fritz, S. A., O. R. P. Bininda-Emonds, and A. Purvis. 2009. Geographical variation in predictors of mammalian extinction risk: big is bad, but only in the tropics. Ecology Letters 12:538–549.&lt;/p&gt;
&lt;p&gt;Jetz, W., G. H. Thomas, J. B. Joy, K. Hartmann, and A. O. Mooers. 2012. The global diversity of birds in space and time. Nature 491:444.&lt;/p&gt;
&lt;p&gt;O’Meara, B. C., L. J. Harmon, and J. Eastman. 2013. PhyloOrchard: Important and/or useful phylogenetic datasets.&lt;/p&gt;
&lt;p&gt;Pyron, R. A. and J. J. Wiens. 2011. A large-scale phylogeny of Amphibia including over 2800 species, and a revised classification of extant frogs, salamanders, and caecilians. Molecular Phylogenetics and Evolution 61: 543-583.&lt;/p&gt;
&lt;p&gt;Uyeda JC, Pennell MW, Miller ET, Maia R, McClain CR (2017) The evolution of energetic scaling across the vertebrate tree of life. The American Naturalist 190(2): 185-199. &lt;a href=&#34;https://doi.org/10.1086/692326&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1086/692326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uyeda JC, Pennell MW, Miller ET, Maia R, McClain CR (2017) Data from: The evolution of energetic scaling across the vertebrate tree of life. Dryad Digital Repository. &lt;a href=&#34;https://doi.org/10.5061/dryad.3c6d2&#34; class=&#34;uri&#34;&gt;https://doi.org/10.5061/dryad.3c6d2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zheng, Y., and J. J. Wiens. 2016. Combining phylogenomic and supermatrix approaches, and a time-calibrated phylogeny for squamate reptiles (lizards and snakes) based on 52 genes and 4162 species. Molecular Phylogenetics and Evolution 94:537–547.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PREPRINT: Macroevolution of dimensionless life history metrics in tetrapods</title>
      <link>/publication/lifehistory/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>/publication/lifehistory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Debugging in R</title>
      <link>/post/2019-01-03-debugging-r/</link>
      <pubDate>Thu, 03 Jan 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/2019-01-03-debugging-r/</guid>
      <description>


&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/PhD_Debugging.png&#34; /&gt;
&lt;figcaption&gt;
PhD comics Jorge Cham (www.phdcomics.com)
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Recently I’ve been part of beta testing a new R package. The package allows users to apply different masks to spcies distribution models to create more ecologically realistic range models. The package itself is very cool, but since it hasn’t been released yet, this post will be short on ecology. Instead, I’m going to focus on the process I’ve been using to debug the package. This debugging thought process and the different functions that make it possible are things I wish I’d been formally taught while learning R (but better late than never!).&lt;/p&gt;
&lt;div id=&#34;traceback&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;traceback&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;traceback()&lt;/code&gt; function is definitely one of those that I wished I learned sooner. Basically, &lt;code&gt;traceback()&lt;/code&gt; shows you the series of functions called, including the one resulting in the last error. For example, when I ran &lt;code&gt;traceback()&lt;/code&gt; after the function I was testing threw an error, I got the following readout:&lt;/p&gt;
&lt;figure&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:100%&#34; src=&#34;/img/traceback_example.png&#34; /&gt;
&lt;/figure&gt;
&lt;p&gt;When I tried to use the function &lt;code&gt;rangeSVM()&lt;/code&gt;, I got an error, as we can see in the first line of code I ran. By running &lt;code&gt;traceback()&lt;/code&gt;, I can see the order of functions that &lt;code&gt;rangeSVM()&lt;/code&gt; uses: first, it called the &lt;code&gt;svm()&lt;/code&gt; function from the R package &lt;code&gt;e1071&lt;/code&gt;, which in turn called &lt;code&gt;svm.formula()&lt;/code&gt;, which finally called &lt;code&gt;svm.default()&lt;/code&gt;. This last function, &lt;code&gt;svm.default()&lt;/code&gt; is what produced the error (as we can see from the error message, as well).&lt;/p&gt;
&lt;p&gt;Running &lt;code&gt;traceback()&lt;/code&gt; can be especially helpful in situations like this, where the error message comes from a function called internally by the function you actually ran. Here, the error does not come from the &lt;code&gt;rangeSVM()&lt;/code&gt; function, so reading the documentation for &lt;code&gt;rangeSVM()&lt;/code&gt; could not save me. Now I know that the error actually comes from a function in the &lt;code&gt;e1071&lt;/code&gt; package, so I could check out the source code to figure out what kind of issue causes that error message.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;checking-source-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Checking source code&lt;/h1&gt;
&lt;p&gt;There is a &lt;a href=&#34;https://github.com/cran&#34;&gt;CRAN GitHub account&lt;/a&gt; that is an unofficial read-only mirror of all CRAN packages. Typically, when I want to read through the code for a particular function in a package, this is what I use. To dig a little deeper into what was going wrong with the &lt;code&gt;svm()&lt;/code&gt; function, I found the code &lt;a href=&#34;https://github.com/cran/e1071/blob/master/R/svm.R&#34;&gt;here&lt;/a&gt;. This allowed me to look at the function definitions for &lt;code&gt;svm.formula()&lt;/code&gt; as well as &lt;code&gt;svm.default()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;debug&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Reading through the source code is helpful, but wouldn’t it be even better if you could watch R step through the function line by line until the error? Fortunately the handy &lt;code&gt;debug()&lt;/code&gt; function does exactly that. By running the following:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;debug(rangeSVM)
svmHYB_weight &amp;lt;- rangeSVM(variegatus[,2:3], tridactylus[,2:3], sdm = raster::stack(var_sdm, tri_sdm), nrep = 3, weight = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I could see that the error occurred at line 100 of &lt;code&gt;svm.R&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Browse[2]&amp;gt; 
# debug at /Users/hellenfellows/OneDrive - AMNH/Wallace/maskRangerBetaTesting/maskRangeR/R/svm.R#100: m &amp;lt;- e1071::svm(sp ~ ., data = xy, gamma = params_best_df_mostFreq$gamma[1], 
#     cost = params_best_df_mostFreq$cost[1], class.weights = cw)
# Browse[2]&amp;gt; 
# Error in svm.default(x, y, scale = scale, ..., na.action = na.action) : 
#   NA/NaN/Inf in foreign function call (arg 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Browse&amp;gt;&lt;/code&gt; prompt at the beginning of the lines indicate that the debugger is working. The &lt;code&gt;debug at&lt;/code&gt; part shows the next line of code to be executed when you hit enter next. R will continue to show you the following line of code as you press enter (up until you hit the error). If you are running all of this in RStudio, it will also conveniently highlight the lines in the source code that will be run next. Also, when you want to get out of the debugger so you can run that function again later without debugging, run &lt;code&gt;undebug(rangeSVM)&lt;/code&gt;, for example.&lt;/p&gt;
&lt;p&gt;My initial suspicion was that the function was failing during one of the runs of a for loop, however the debugger showed me that the function was making it through all the runs of the for loop. Instead, the error occurred during the final step of &lt;code&gt;rangeSVM()&lt;/code&gt; when the function attempted to integrate the results of all runs of the for loop to create a final support vector machine model.&lt;/p&gt;
&lt;div id=&#34;get&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;get&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;To figure out why this problem was occurring, I wanted to be able to see the values of the different variables passeed to that final step of the function. Handily enough, while in the debugger, you can use the function &lt;code&gt;get(&amp;quot;variable&amp;quot;)&lt;/code&gt; to check the status of the different variables (the name of the variable needs to be in quotation marks).&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;debug(rangeSVM)
svmHYB &amp;lt;- rangeSVM(variegatus[,2:3], tridactylus[,2:3], sdm = raster::stack(var_sdm, tri_sdm), nrep = 3)
# Browse[2]&amp;gt; 
# debug at /Users/hellenfellows/OneDrive - AMNH/Wallace/maskRangerBetaTesting/maskRangeR/R/svm.R#96: params_best_df$params &amp;lt;- paste0(params_best_df$gamma, params_best_df$cost)

# Browse[2]&amp;gt; get(&amp;quot;params_best_df&amp;quot;)
#        gamma cost class.weights
# 38 0.5000000    2             1
# 85 0.0078125 2048             1
# 95 0.0078125 8192             1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was the final step of the process that actually allowed me to figure out the problem:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Browse[2]&amp;gt; get(&amp;quot;params_best_df_mostFreq&amp;quot;)
# [1] gamma cost 
# &amp;lt;0 rows&amp;gt; (or 0-length row.names)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without going into too much detail about the function itself, I was able to tell that the parameters I was feeding into the support vector machine function somehow didn’t exist: the variable &lt;code&gt;params_best_df_mostFreq&lt;/code&gt; had 0 rows.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;other-tips-and-tricks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Other tips and tricks&lt;/h1&gt;
&lt;p&gt;I got much of these resources from a very helpful blog post called &lt;a href=&#34;https://petewerner.blogspot.com/2013/01/tracking-down-errors-in-r.html&#34;&gt;“Tracking down errors in R”&lt;/a&gt; by Pete Werner (also available as a post on &lt;a href=&#34;https://www.r-bloggers.com/tracking-down-errors-in-r/&#34;&gt;R-bloggers&lt;/a&gt;). This post goes through a slightly simpler example of debugging which is reproducible (something I have not attempted to do here), so it is very helpful for seeing the process on a simpler function. In addition to the techniques I used, Pete also explains how you can turn warning messages into errors in the case that your function is throwing a troubling warning message that you suspect is causing an error later on.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Adding Google Docs to website</title>
      <link>/post/2018-12-12-add-google-doc/</link>
      <pubDate>Wed, 12 Dec 2018 21:13:14 -0500</pubDate>
      
      <guid>/post/2018-12-12-add-google-doc/</guid>
      <description>


&lt;p&gt;&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/google_docs_fig.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Given that the Academic website theme comes with a place to upload talks, I thought I might as well upload the slides for my Senior Honors presentation. Unfortunately, this was a slightly more difficult task than I anticipated. The default format for slides in Hugo appears to be Markdown slides, which is fine, except when your talk was made in Google Slides.&lt;/p&gt;
&lt;div id=&#34;google-slides-to-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Google Slides to Markdown?&lt;/h2&gt;
&lt;p&gt;My first thought was that there must be some tool to convert a Google slides talk into a Markdown document. For whatever reason, there are several tools (like &lt;a href=&#34;https://github.com/gsuitedevs/md2googleslides&#34;&gt;this GitHub repo&lt;/a&gt;) to go the other direction, from Markdown to Google slides. I found a GitHub repo &lt;a href=&#34;https://github.com/mangini/gdocs2md&#34;&gt;&lt;code&gt;gdocs2md&lt;/code&gt;&lt;/a&gt; that claimed to go in the other direction, but the script provided doesn’t currently run (if anyone is a whiz at Google Apps and wants to take a stab at fixing up this code, it would be a great tool!). There is a Google Drive add-on called &lt;a href=&#34;https://chrome.google.com/webstore/detail/gd2md-html/igffnbdfnodiaphfmfaiiaegmoljbghf&#34;&gt;GD2md-html&lt;/a&gt; that converts Google Docs to Markdown or HTML, which should be useful for the future, but it doesn’t help with Google Slides.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;embedding-google-slides-in-hugo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Embedding Google Slides in Hugo&lt;/h2&gt;
&lt;p&gt;Having abandoned the idea of just converting my current slides into Markdown and going on my merry way, I started looking for a way to embed the Google Slides themselves into my website.&lt;/p&gt;
&lt;div id=&#34;hugo-shortcodes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hugo shortcodes&lt;/h3&gt;
&lt;p&gt;Hugo has certain snippets called &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; that are designed to address the problem of having to add raw HTML into Markdown. These shortcodes help render a content file according to a template created by Hugo. For example, the shortcode &lt;code&gt;figure&lt;/code&gt; adds HTML functionality to the Markdown image syntax. There are shortcodes for Instagram (&lt;code&gt;instagram&lt;/code&gt;), Vimeo (&lt;code&gt;vimeo&lt;/code&gt;) and Twitter (&lt;code&gt;tweet&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-gdocs-shortcode&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The &lt;code&gt;gdocs&lt;/code&gt; shortcode&lt;/h3&gt;
&lt;p&gt;One of these shortcodes, &lt;code&gt;gdocs&lt;/code&gt;, allows you to embed all Google doc types (Slides, Docs, Sheets, etc.) into your website. The HTML code for the shortcode can be found in the &lt;code&gt;hugo-academic&lt;/code&gt; GitHub repo: &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/layouts/shortcodes/gdocs.html&#34; class=&#34;uri&#34;&gt;https://github.com/gcushen/hugo-academic/blob/master/layouts/shortcodes/gdocs.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I tried inserting the following into the &lt;code&gt;index.md&lt;/code&gt; file for my talk below the line with three &lt;code&gt;+&lt;/code&gt; signs:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;{{&amp;lt; gdocs &amp;quot;https://docs.google.com/presentation/d/e/2PACX-1vTsSj-oftLksGEKTkzCoBSIpzooO61ZMGAUzoGBv7u20OzMQK8ctX3gCpWTMm4UowrrWumFrdQsY0Cd/embed?start=false&amp;amp;loop=false&amp;amp;delayms=5000&amp;quot; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I got the URL by going to my Google Slides, and clicking File &amp;gt; Publish to the web. I selected Embed and copied the link following &lt;code&gt;src=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this didn’t result in anything showing up on my page besides a large blank space where I assume Hugo was trying to put my presentation. I tried some variations on the above code, including adding &lt;code&gt;src=&lt;/code&gt; before the URL (no change), and moving the entire code snippet above the &lt;code&gt;+++&lt;/code&gt; line in &lt;code&gt;index.md&lt;/code&gt; (results in the error &amp;quot; unmarshal failed: Near line 65 (last key parsed ‘image’): bare keys cannot contain ‘{’ “).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;html-code&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;HTML code&lt;/h3&gt;
&lt;p&gt;At this point, I was feeling pretty discouraged, when I happened upon a &lt;a href=&#34;https://discourse.gohugo.io/t/shortcode-for-google-slide-presentation-embed/3464&#34;&gt;Hugo forum post&lt;/a&gt; with the HTML code someone used to embed a Google Slides presentation. I have hardly any familiarity with HTML, but clearly shortcodes and I weren’t getting along very well, so I decided to give it a shot. I copied and pasted the code from the forum, replacing the URL following &lt;code&gt;src=&lt;/code&gt; with my link from above, and voila! My slides appeared on the post.&lt;/p&gt;
&lt;p&gt;Here is the code for reference:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;iframe src=&amp;quot;https://docs.google.com/presentation/d/e/2PACX-1vTsSj-oftLksGEKTkzCoBSIpzooO61ZMGAUzoGBv7u20OzMQK8ctX3gCpWTMm4UowrrWumFrdQsY0Cd/embed?start=false&amp;amp;loop=false&amp;amp;delayms=5000&amp;quot; frameborder=&amp;quot;0&amp;quot; width=&amp;quot;800&amp;quot; height=&amp;quot;600&amp;quot; allowfullscreen=&amp;quot;true&amp;quot; mozallowfullscreen=&amp;quot;true&amp;quot; webkitallowfullscreen=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;moral-of-the-story&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Moral of the story&lt;/h2&gt;
&lt;p&gt;It seems like shortcodes can be a really valuable feature of Hugo, especially should I ever need to include a video of some kind (or if I actually start using Twitter again &lt;em&gt;and&lt;/em&gt; tweet something worth sharing, two improbable events). In the case of Google Docs/Sheets/etc., however, just using the HTML code snippet seems like the easiest option (and is a good motivation to learn HTML at a later date).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ordering website components</title>
      <link>/post/2018-12-11-order-items/</link>
      <pubDate>Tue, 11 Dec 2018 21:13:14 -0500</pubDate>
      
      <guid>/post/2018-12-11-order-items/</guid>
      <description>


&lt;p&gt;&lt;img class=&#34;special-img-class&#34; style=&#34;width:50%&#34; src=&#34;/img/out_of_order.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As I continue setting up this site, one of the major things irking me was the order of content on the website. For example, I wasn’t loving that the first thing you saw when visiting the site was the giant picture of my face. I wanted to be able to put content at the top of the site and move information like my bio and work experience towards the bottom. Hugo allows you to weight certain types of content to change the order, so that’s what I tackled.&lt;/p&gt;
&lt;div id=&#34;menu-links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Menu links&lt;/h2&gt;
&lt;p&gt;The first order of things I could change was the order of links in the menu on the top right of my page. In this case, I wanted my information to be the first link, followed by “Publications”, “Projects”, “Posts”, “Tutorials”, and “Contact”. The weighting for these links is found in the &lt;code&gt;config.toml&lt;/code&gt; file of the website repo, where a standard entry for one of the links looks a bit like this:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;Publications&amp;quot;
  url = &amp;quot;#publications&amp;quot;
  weight = 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here you can change the “name”, which is what the menu option actually says (e.g. I changed the menu option for my bio from “Home” to “About”). The URL refers to where on the site the link will point to. If you are trying to link to a homepage widget, as in the example above, the url will be &lt;code&gt;#&lt;/code&gt; followed by the file name of that widget in the &lt;code&gt;content/home/&lt;/code&gt; folder. You want to be careful not to link to a widget that is inactive (which you can see in the first few lines of the Markdown document for that widget), otherwise the link will not go anywhere.&lt;/p&gt;
&lt;p&gt;If you are linking to something else, you can provide the file-path relative to the &lt;code&gt;content&lt;/code&gt; folder – for example, my tutorials live in the folder &lt;code&gt;content/tutorial&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;Tutorials&amp;quot;
  url = &amp;quot;/tutorial/&amp;quot;
  weight = 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, you can change the weights to reflect the order you want the links to appear in the menu: the links will appear from left to right in ascending order of weight (&lt;code&gt;weight = 1&lt;/code&gt; is the first link, etc.)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;home-page-content&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Home page content&lt;/h2&gt;
&lt;p&gt;Initially, I confused changing the weights in the &lt;code&gt;config.toml&lt;/code&gt; file with actually changing the order of those sections on the home page, but doing that actually requires editing the Markdown files for those types of content in the &lt;code&gt;content/home/&lt;/code&gt; folder. For example, I decided I wanted to put posts first, so I went to &lt;code&gt;content/home/posts.md&lt;/code&gt; and modified the &lt;code&gt;weight&lt;/code&gt; argument so that it was lowest and continued editing the weights until everything was in the order I wanted.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating this website</title>
      <link>/post/2018-12-7-create-website/</link>
      <pubDate>Fri, 07 Dec 2018 21:13:14 -0500</pubDate>
      
      <guid>/post/2018-12-7-create-website/</guid>
      <description>


&lt;p&gt;&lt;img class=&#34;special-img-class&#34; style=&#34;width:75%&#34; src=&#34;/img/website_fig.png&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;getting-started&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;I’ve been contemplating the idea of creating a website for sometime, but my initial (mostly half-hearted) attempts ran into some serious technological glitches. I started out trying to create a GitHub site using Jekyll, since I knew I wanted my website to be hosted via GitHub to keep all of my code in the same place. After about an hour of unsuccessful commits that resulted in a lovely white page with my name on it, I scrapped the whole venture until I heard about the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt; R package. Since R is my programming language of choice, the idea of being able to write posts in RMarkdown and preview my site from the comfort of RStudio was tremendously appealing. I saw a research site created through Hugo’s Academic theme using &lt;code&gt;blogdown&lt;/code&gt; that referenced some helpful tutorials and decided to give the process another shot.&lt;/p&gt;
&lt;div id=&#34;hugo-blogdown&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hugo + &lt;code&gt;blogdown&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;After my initial failures with Jekyll, I knew enough about the process (and my own skills) to be wary of the Academic theme’s optimistic tagline “Create a beautifully simple site in under 10 minutes”. So fair warning: getting this site up and semi-running was the work of an afternoon plus. I am not going to provide a full tutorial here, since several excellent ones already exist, but I will give my input on which resources worked for me and where I had difficulties.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;useful-resources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Useful resources&lt;/h2&gt;
&lt;p&gt;I started out following &lt;a href=&#34;https://amber.rbind.io/blog/2016/12/19/creatingsite/&#34;&gt;Amber Thomas’s instructions&lt;/a&gt; for using &lt;code&gt;blogdown&lt;/code&gt;, Hugo, and GitHub pages to create a website. I probably should have taken better note of her initial disclaimer that simpler methods of creating a site exist, but nonetheless I found her instructions useful for wrapping my head around the method behind the whole process. As she explains, GitHub pages and Hugo work in different ways: GitHub pages uses information from the master branch of the repository to build your website, while Hugo builds a website inside the public folder. The solution she presents in her tutorial creates a sub branch within GitHub. She provides some shell scripts written by &lt;a href=&#34;https://www.hjdskes.nl&#34;&gt;Jente Hidskes&lt;/a&gt; that create the sub branch and also update the site. These did not run for me for whatever reason – I believe Hidskes has written an updated tutorial to fix them, however.&lt;/p&gt;
&lt;p&gt;While I was reading the comments on Thomas’s tutorials to try to troubleshoot the shell script problems, I found a different &lt;a href=&#34;http://robertmyles.github.io/2017/02/01/how-to-make-a-github-pages-blog-with-rstudio-and-hugo/&#34;&gt;tutorial by Robert McDonnell&lt;/a&gt; that promised a more streamlined approach. McDonnell gets around the GitHub/Hugo conflicts by creating two GitHub repositories, one for the website (for example, my repo is called &lt;a href=&#34;https://github.com/babichmorrowc/babichmorrowc.github.io&#34;&gt;babichmorrowc.github.io&lt;/a&gt;) and one for all of the Hugo and &lt;code&gt;blogdown&lt;/code&gt; content (mine is called &lt;a href=&#34;https://github.com/babichmorrowc/website-hugo&#34;&gt;website-hugo&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To link these two repositories, Thomas has users create a &lt;a href=&#34;https://blog.github.com/2016-02-01-working-with-submodules/&#34;&gt;Git Submodule&lt;/a&gt; using the following code:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git submodule add -b master git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is where, once again, I ran into difficulties. I kept getting the error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Cloning into &amp;#39;&amp;lt;filepath&amp;gt;/website-hugo/public&amp;#39;...
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of &amp;#39;git@github.com:babichmorrowc/babichmorrowc.github.io.git&amp;#39; into submodule path &amp;#39;&amp;lt;filepath&amp;gt;/website-hugo/public&amp;#39; failed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fortunately, there turned out to be an easy fix for this – the code McDonnell provides uses the SSH URL, which is something I do not have set up. I replaced it with the HTTPS URL (code below), and went on my merry way.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git submodule add -b master https://github.com/babichmorrowc/babichmorrowc.github.io.git public&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pushing-to-github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pushing to GitHub&lt;/h2&gt;
&lt;p&gt;From that point forward, I had a functioning site that I could preview in RStudio using the &lt;code&gt;serve_site()&lt;/code&gt; function. Using the following Git commands, I could push those changes and get that same site up and running online:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# From the folder for the repo website-hugo
cd public
git add .
git commit -m &amp;quot;new commit!&amp;quot;
git push origin master

cd ..
git add .
git commit -m &amp;quot;new commit part 2&amp;quot;
git push&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;editing-my-site&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Editing my site&lt;/h2&gt;
&lt;p&gt;I’m still learning my way around the format of the Hugo site, but by some trial and error I’ve started the process of customizing the site. I am using the &lt;a href=&#34;https://themes.gohugo.io/academic/&#34;&gt;Academic&lt;/a&gt; theme. So far I’ve managed to update my bio, add a publication, and take a stab at creating projects. As I get more familiarity with the format, I will try for a more comprehensive blog post explaining how to add your own content.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Distribution modeling of Bradypus</title>
      <link>/project/bradypus/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>/project/bradypus/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Example Page</title>
      <link>/tutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>/tutorial/example/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk: Macroevolution of dimensionless life history metrics in tetrapods</title>
      <link>/talk/honors_presentation/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/talk/honors_presentation/</guid>
      <description>&lt;p&gt;&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vTsSj-oftLksGEKTkzCoBSIpzooO61ZMGAUzoGBv7u20OzMQK8ctX3gCpWTMm4UowrrWumFrdQsY0Cd/embed?start=false&amp;loop=false&amp;delayms=5000&#34; frameborder=&#34;0&#34; width=&#34;800&#34; height=&#34;600&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Poster: Macroevolution of dimensionless life histories in amniotes</title>
      <link>/talk/tree_2017/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 -0400</pubDate>
      
      <guid>/talk/tree_2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>New approaches for delineating n‐dimensional hypervolumes</title>
      <link>/publication/hypervolumes/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 -0400</pubDate>
      
      <guid>/publication/hypervolumes/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
